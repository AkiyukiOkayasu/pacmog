name: CI

on:
  pull_request:
    branches: [ "main" ]
    types: [ opened, synchronize, reopened ]

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
    - uses: taiki-e/install-action@cargo-llvm-cov
    - name: install libasound2-dev
      run: |
        sudo apt-get update
        sudo apt-get install libasound2-dev
    - name: Print stable Rust version
      run: rustc --version
    - name: Formatter
      run: cargo fmt -- --check
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: Run examples
      run: |
        cargo build --example beep
        cargo build --example beep_imaadpcm
        cargo build --example beep_imaadpcm_stereo
        cargo build --example print_sample_values
        cargo build --example read_wav_no_std
        cargo build --example read_ima_adpcm_no_std
    - name: gh command
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: gh pr list
    - name: Code coverage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
      run: |
        echo -e "# LLVM code coverage  \n" > cov.txt
        cargo llvm-cov --html >> cov.txt
        gh pr comment ${{ github.event.pull_request.number }} -F ./cov.txt --repo ${{ github.repository }}
    - name: Clippy
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
      run: |
        echo -e "# Clippy  \n" > clippy.txt
        cargo clippy -v --all-targets >> clippy.txt
        gh pr comment ${{ github.event.pull_request.number }} -F ./clippy.txt --repo ${{ github.repository }}

